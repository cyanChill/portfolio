/* Glitch effect */
.stack {
  --init-dur: 300ms; /* Duration of initial animation ("stack") */
  --dur: 2s; /* Duration of "glitch" animation */
  --delay: 2s; /* Delay between "glitch" animation */

  display: grid;
  grid-template-columns: 1fr;
}

.stack span {
  grid-row-start: 1;
  grid-column-start: 1;
  /* Height of each segment of effect */
  --stack-height: calc(100% / var(--stacks) - 1px);
  --inverse-idx: calc(var(--stacks) - 1 - var(--index));
  --clip-top: calc(var(--stack-height) * var(--idx));
  --clip-bottom: calc(var(--stack-height) * var(--inverse-idx));
  /* Creates a segment from "cropping" the top & bottom */
  clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
  animation: stack var(--init-dur) cubic-bezier(0.46, 0.29, 0, 1.24) 1 backwards
      calc(var(--index) * 120ms),
    glitch var(--dur) ease infinite var(--delay) alternate-reverse;
}

.stack span:nth-child(even) {
  --glitch-translate: 8px;
}

.stack span:nth-child(odd) {
  --glitch-translate: -8px;
}

@keyframes stack {
  0% {
    opacity: 0;
    transform: translateX(-50%);
    text-shadow: -2px 3px 0 hsl(var(--red-200)), 2px -3px 0 blue;
  }
  60% {
    opacity: 0.5;
    transform: translateX(50%);
  }
  80% {
    transform: none;
    opacity: 1;
    text-shadow: 2px -3px 0 hsl(var(--red-200)), -2px 3px 0 blue;
  }
  100% {
    text-shadow: none;
  }
}

@keyframes glitch {
  0% {
    text-shadow: -2px 3px 0 hsl(var(--red-200)), 2px -3px 0 blue;
    transform: translate(var(--glitch-translate));
  }
  2% {
    text-shadow: 2px -3px 0 hsl(var(--red-200)), -2px 3px 0 blue;
  }
  4%,
  100% {
    text-shadow: none;
    transform: none;
  }
}
